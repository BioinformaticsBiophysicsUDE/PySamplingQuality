#### #### ####
    # Config-File for the module <Generate_Clustering()>. Ensure, that every parameter is set with the certain format
    # given as an example (WITHIN ""). All optional parameters are initialized with their default parameters.
    #### #### ####
##  ##  ##  ##  ##
### DESCRIPTION: ###
# 
# v12.10.16
# Calculates and generates the LOCAL or GLOBAL PROFILE & CENTROIDS for effective clustering for the submitted 
# trajectories, 
#     - using Generate_reference_for_Clustering() & Return_FullColRMSD()
#     - using RMSD matrices
#     - possibility, to investigate different (equal) simulation time parts
#     - possibility, to submit a reference as a starting point: the structure with the lowest RMSD to this reference
#                    is then the first starting centroid (ONLY FOR GROMACS OR AMBER TRAJECTORIES)
#                    otherwise, the first frame of the trajectory is used as starting point
#      --> it is also possible to use RefFrame, to select a frame which is then always taken as starting centroid
#     - MaxNumberLines: DIRECTLY INFLICTS THE MEMORY USAGE:
#         1. for GLOBAL clustering, at least one FULL row of all involved RMSD matrices has to be loaded
#         2. MaxNumberLines adjust the number of these rows which are loaded at once
#         3. if a full RMSD block (shape=2000,2000) can be loaded with MaxNumberLines=2000, the algorithm is much faster
#         4. if the FULL RMSD matrix, containing all RMSD block matrices, can be loaded, everything can be clustered at once
#     - generates: 
#                 |                  Threshold = 0.45                            |
#                 |  eff Clust     |    next Center   |     farthest Center      |
#  Frame | TrajNr | PROF | effRMSD | nextC | nextRMSD | farthestC | farthestRMSD |
#          - PROF:         cluster number/centroid for the specific frame
#          - effRMSD:      over the course of the "average merging" different centroids, this represents the RMSD value of the
#                          new centroid to the merged formerly defined centroids
#          - nextC:        the closest centroid to the current frame
#          - nextRMSD:     RMSD value between the current frame and the closest centroid
#          - farthestC:    the farthest centroid to the current frame
#          - farthestRMSD: RMSD value between the current frame and the farthest centroid
#     - trajectories, which do not match <StartFrame-EndingFrame> are discarded, but TrajNr will be still consecutive,
#       check the description stored in the HEADER of the stored Clustering file
# 
# 
##  ##  ##  ##  ##
#-------------------------------------------
# Directory, where RMSD matrices are stored, e.g. 'RMSD_matrices/'
MatrixDir = "RMSD_matrices/"                  # <STRING> format example: (non-directory) "TEXT" | (directory) "TEXT/"
#-------------------------------------------
# Directory, where the clustering will be stored, e.g. 'Clustering/'
SaveDir = "Clustering/"                    # <STRING> format example: (non-directory) "TEXT" | (directory) "TEXT/"
#-------------------------------------------
# list of Trajectory name prefixes WITHOUT ENDING, Names of the Block RMSD matrices / distributions refer to these names, e.g. ['MD1', 'MD2', ...] <-> MD1_bin.dat, MD2_bin.dat, MD1_MD2_bin.dat, ...
TrajNameList = "Met_Amber1_stripped Met_Amber2_stripped"               # <LIST> format example: "Name1 Name2 Name3 Name4"
#-------------------------------------------
# number of frames for corresponding TrajName, have to match RMSD matrix shape & length of TrajNameList, e.g. [2000, 2000, 1000, ...] if PartList != None, TrajNameList must store the NrOfFrames for each SPLIT
TrajLengthList = "1000 1000"             # <INT-LIST> format example: "2 4 65 12 4 22"
#-------------------------------------------
# Clustering-Threshold [nm], e.g. 0.2
Threshold = "0.1"                  # <FLOAT> format example: "203.12"
#-------------------------------------------
# PREFIX name for the clustering file, e.g. 'Mol2' leads to 'Mol2_R0.1_0-100_GLOBAL.txt', '%s_R%s_%s-%s_%s.txt' % (SaveName, Threshold, StartFrame, EndingFrame, 'GLOBAL' or 'LOCAL')
SaveName = "Met_Amber"                   # <STRING> format example: (non-directory) "TEXT" | (directory) "TEXT/"
#-------------------------------------------
# Maximal number of lines which are loaded from the FullRMSD matrix, it inflicts directly the memory usage, if MaxNumberLines > sum(TrajLengthList), all RMSD matrices are loaded at once, recommended using length of one RMSD block, e.g. if one block RMSDmatrix.shape == (2000,2000), try to use MaxNumberLines = 2000
MaxNumberLines = "1000"             # <INT> format example: "502"
#-------------------------------------------
# <default None> ONLY NECESSARY IF ReferencePDB is not None! selects the frames of the trajectory, GROMACS, -dt 't MOD dt = first [ns]', AMBER skip dt-th frame 'first last skip', if TimeStep = None, use ALL frames in the trajectory
TimeStep = "1"               # <FLOAT/INT> format example: (FLOAT) "0.1" | (INT) "3"
#-------------------------------------------
# <default 0> starting frame of Trajectories/RMSD matrices, to select different simulation times/lengths together with 'EndingFrame'
StartFrame = "0"                # <INT> format example: "502"
#-------------------------------------------
# <default NP.infty> ending frame of Trajectories/RMSD matrices, to select different simulation times/lengths together with 'StartingFrame'
EndingFrame = "NP.infty"        # <INT> format example: "502"
#-------------------------------------------
# <default None> defines into how many parts the single trajectories are split, due to memory reasons, 1. len(PartList) == len(TrajNameList) !! || 2. PartList = [1,2,3], (MD1.xtc -> MD1.xtc), (MD2.xtc -> MD2_part1.xtc, MD2_part2.xtc), (MD3.xtc -> MD3_part1.xtc, MD3_part2.xtc, MD3_part3.xtc), || 3. default PartList = None -> PartList = [1]*len(TrajNameList)
PartList = "None"               # <INT-LIST> format example: "2 4 65 12 4 22"
#-------------------------------------------
# <default True> if True, a GLOBAL clustering is applied for all concatenated trajectories if False, every trajectory is clustered separately
GLOBAL = "True"                 # <BOOL> format example: "False" or "True"
#-------------------------------------------
# <default None> ONLY NECESSARY IF ReferencePDB is not None! directory, where to store possible RMSD curves to a submitted reference, if is None, RMSDdir = SaveDir
RMSDdir = "None"                # <STRING> format example: (non-directory) "TEXT" | (directory) "TEXT/"
#-------------------------------------------
# <default None> ONLY NECESSARY IF ReferencePDB is not None! Directory, where the trajectories are located if a reference is submitted, then, RMSD curves are calculated using these, e.g. 'TrajDir/'
TrajDir = "Trajectories/"                # <STRING> format example: (non-directory) "TEXT" | (directory) "TEXT/"
#-------------------------------------------
# <default None> ONLY NECESSARY IF ReferencePDB is not None! Directory, where the topology file is located, for GROMACS, this is equal to the Reference(PDB), for AMBER, this is a .top file, e.g. 'TrajDir/'
TopologyDir = "Trajectories/"            # <STRING> format example: (non-directory) "TEXT" | (directory) "TEXT/"
#-------------------------------------------
# <default None> ONLY NECESSARY IF ReferencePDB is not None! topology name, for GROMACS this has to contain the reference(PDB) for AMBER, this is the input topology .top
TopologyName = "Met_Amber_stripped.top"           # <STRING> format example: (non-directory) "TEXT" | (directory) "TEXT/"
#-------------------------------------------
# <default .xtc> ONLY NECESSARY IF ReferencePDB is not None! ending of the trajectories, only necessary, if a reference is submitted, normally '.xtc' or '.trr', or '.pdb' or '.nc', or '.netcdf'
Ending = ".netcdf"                 # <STRING> format example: (non-directory) "TEXT" | (directory) "TEXT/"
#-------------------------------------------
# <default None> ONLY NECESSARY IF ReferencePDB is not None! FIT selection Gromacs, e.g. 'Backbone', CALC selection Amber , e.g. '@N,CA,C', see Amber syntax
Select1 = "@N,CA,C"                # <STRING> format example: (non-directory) "TEXT" | (directory) "TEXT/"
#-------------------------------------------
# <default None> ONLY NECESSARY IF ReferencePDB is not None! CALC selection Gromacs, e.g. 'Backbone'
Select2 = "None"                # <STRING> format example: (non-directory) "TEXT" | (directory) "TEXT/"
#-------------------------------------------
# <default ''> ONLY NECESSARY IF ReferencePDB is not None! if cpptraj is not in environmental variables, define directory to 'cpptraj', e.g. /home/user/Software/amber14/bin/
AmberHome = "/home/mike/Software/amber14/bin/"                # <STRING> format example: (non-directory) "TEXT" | (directory) "TEXT/"
#-------------------------------------------
# <default ''> ONLY NECESSARY IF ReferencePDB is not None! if g_rms | gmx_suffix rms is not in environmental variables, define directory to them, e.g. /home/user/Software/gromacs/bin/
GromacsHome = "''"              # <STRING> format example: (non-directory) "TEXT" | (directory) "TEXT/"
#-------------------------------------------
# <default ''> ONLY NECESSARY IF ReferencePDB is not None! gmx_suffix for Gromacs installation, e.g. '_467' for 'g_rms_467'
Program_Suffix = "''"           # <STRING> format example: (non-directory) "TEXT" | (directory) "TEXT/"
#-------------------------------------------
# <default None> ONLY NECESSARY IF ReferencePDB is not None! possible reference, to which the RMSD between all trajectories are calculated, then the closest structure is the starting point for the clustering e.g. 'Crystalstructure.pdb'
ReferencePDB = "Met_Amber2_stripped.pdb"           # <STRING> format example: (non-directory) "TEXT" | (directory) "TEXT/"
#-------------------------------------------
# FORMAT, [GROMACS/BINARY] single precision 'float32', double precision 'float64', [AMBER/ELSE] 'None'
BinFile_precision = "None"          # <TYPE> format example: "float32" or "float64"
#-------------------------------------------
# <default None> possibility to submit a frame, which is the first centroid for the clustering, 0 means the first frame of the trajectories, None means, it tries to calculate RMSD curves using GROMACS or AMBER if ReferencePDB is not None
RefFrame = "None"               # <INT> format example: "502"
